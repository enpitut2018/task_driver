<p id="notice"><%= notice %></p>

<p>
  <strong>タスク名:</strong>
  <%= @task.name %>
</p>

<p>
  <strong>締め切り:</strong>
  <%= @task.deadline %>
</p>

<p>
  <strong>重要度:</strong>
  <%= @task.importance %>
</p>

<p>
  <strong>メモ:</strong>
  <%= @task.note %>
</p>

<p>
  <strong>進捗:</strong>
  <%= @task.status %>
</p>

<p>
  <strong>始めた時刻:</strong>
  <%= @task.start_time %>
</p>

<p>
  <strong>終わった時刻:</strong>
  <%= @task.finish_time %>
</p>

<<<<<<< feature/account
<%= link_to 'タスクを編集する', edit_task_path(@task) %> |
<%= link_to 'タスク一覧へ戻る', tasks_path %>
=======
<script>
	window.AudioContext = window.AudioContext || window.webkitAudioContext;
	let context = new AudioContext();
	// Audio 用の buffer を読み込む
	let getAudioBuffer = function(url, fn) {
		let req = new XMLHttpRequest();
		// array buffer を指定
		req.responseType = 'arraybuffer';
		req.onreadystatechange = function() {
			if (req.readyState === 4) {
				if (req.status === 0 || req.status === 200) {
					// array buffer を audio buffer に変換
					context.decodeAudioData(req.response, function(buffer) {
					// コールバックを実行
					fn(buffer);
				});
			}
		}};
		req.open('GET', url, true);
		req.send('');
	};
	// サウンドを再生
	let playSound = function(buffer) {
	// source を作成
	let source = context.createBufferSource();
	// buffer をセット
	source.buffer = buffer;
	// context に connect
	source.connect(context.destination);
	// 再生
	source.start(0);
};
let audio_files = [
'excellent.mp3',
'gambarimasyou.mp3',
'go.mp3',
'kaishishimasu.mp3',
'sugoisugoi.mp3',
'yokudekimashita.mp3'
];
let random_audio = audio_files[Math.floor(Math.random() * audio_files.length)];
getAudioBuffer('/audio/' + random_audio, function(buffer) {
	window.onload = function() {
		playSound(buffer);
	}
});
</script>

<%= link_to 'Edit', edit_task_path(@task) %> |
<%= link_to 'Back', tasks_path %>
>>>>>>> develop
